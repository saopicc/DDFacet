[build-system]
requires = ["numpy>=1.15.1,<=1.22.0",
            "pybind11 >= 2.2.2",
            "cython<=0.29.30",
            "cmake",
            "scikit-build-core"]
build-backend = "scikit_build_core.build"

[project]
name = "DDFacet"
version = "0.8.0.0"
description = "Facet-based radio astronomy continuum imager"
license = {file = "LICENSE.md"}
readme = "README.rst"
requires-python = ">=3.8,<3.11"
dependencies = [
    "Cython >= 0.25.2, <= 0.29.30; python_version >= '3.8' and python_version < '3.11'", 
    "numpy >= 1.15.1, <= 1.22.0; python_version >= '3.8' and python_version < '3.11'",
    "sharedarray >= 3.2.0, <= 3.2.3; python_version >= '3.10' and python_version < '3.11'",
    "sharedarray >= 3.2.0, <= 3.2.1; python_version >= '3.8' and python_version < '3.10'", 
    "Polygon3 >= 3.0.8,<=3.0.9.1; python_version >= '3.8' and python_version < '3.11'", 
    "pyFFTW >= 0.10.4,<=0.12.0; python_version >= '3.8' and python_version < '3.11'", 
    "astropy >= 3.0,<=5.3.4; python_version >= '3.8' and python_version < '3.11'", 
    "deap >= 1.0.1,<=1.4.1; python_version >= '3.8' and python_version < '3.11'",
    "ptyprocess>=0.5,<=0.7.0; python_version >= '3.8' and python_version < '3.11'", 
    "ipdb >= 0.10.3,<=0.13.13; python_version >= '3.8' and python_version < '3.11'", 
    "python-casacore >= 3.0.0, <=3.5.2; python_version >= '3.8' and python_version < '3.11'", 
    "pyephem >= 3.7.6.0; python_version >= '3.8' and python_version < '3.11'",
    "numexpr >= 2.6.2,<=2.9.0; python_version >= '3.8' and python_version < '3.11'",
    "matplotlib >= 2.0.0,<=3.8.2; python_version >= '3.8' and python_version < '3.11'", 
    "scipy >= 1.3.3,<=1.11.4; python_version >= '3.8' and python_version < '3.11'", 
    "astLib >= 0.8.0,<=0.11.10; python_version >= '3.8' and python_version < '3.11'",                     
    "psutil >= 5.2.2,<=5.9.8; python_version >= '3.8' and python_version < '3.11'", 
    "py-cpuinfo >= 3.2.0,<=9.0.0; python_version >= '3.8' and python_version < '3.11'", 
    "tables >= 3.6.0,<=3.9.2; python_version >= '3.8' and python_version < '3.11'", 
    "prettytable >= 0.7.2,<=3.9.0; python_version >= '3.8' and python_version < '3.11'", 
    "pybind11 >= 2.2.2,<=2.11.1; python_version >= '3.8' and python_version < '3.11'", 
    "configparser >= 3.7.1,<=6.0.0; python_version >= '3.8' and python_version < '3.11'", 
    "pandas >=0.23.3,<=2.0.3; python_version >= '3.8' and python_version < '3.11'", 
    "ruamel.yaml >= 0.15.92,<=0.18.6; python_version >= '3.8' and python_version < '3.11'", 
    "pylru >= 1.1.0,<=1.2.1; python_version >= '3.8' and python_version < '3.11'", 
    "six >= 1.12.0,<=1.16.0; python_version >= '3.8' and python_version < '3.11'", 
    "dask[array]<= 2023.5.0; python_version >= '3.8' and python_version < '3.11'", 
    "codex-africanus[dask]<=0.3.5; python_version >= '3.8' and python_version < '3.11'", 
    "regions<=0.5; python_version >= '3.8' and python_version < '3.11'",
    "pywavelets<=1.4.1; python_version >= '3.8' and python_version < '3.11'",
    "tqdm<=4.64.0; python_version >= '3.8' and python_version < '3.11'"
]
entrypoints = []
authors = [{ name = "Cyril Tasse", email = "cyril.tasse@obspm.fr" }]
maintainers = [{ name = "Benjamin Hugo", email = "bhugo@sarao.ac.za" }]
urls = { Homepage = "http://github.com/saopicc/DDFacet"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Astronomy"
]

[project.scripts]
"DDF.py" = "DDFacet.__main__:ddf_main"
"CleanSHM.py" = "DDFacet.__main__:cleanshm_main"
"MemMonitor.py" = "DDFacet.__main__:memmonitor_main"
"Restore.py" = "DDFacet.__main__:restore_main"
"ClusterCat.py" = "SkyModel.__main__:clustercat_main"
"dsm.py" = "SkyModel.__main__:dsm_main"
"dsreg.py" = "SkyModel.__main__:dsreg_main"
"ExtractPSources.py" = "SkyModel.__main__:extractpsources_main"
"Gaussify.py" = "SkyModel.__main__:gaussify_main"
"MakeCatalog.py" = "SkyModel.__main__:makecatalog_main"
"MakeMask.py" = "SkyModel.__main__:makemask_main"
"MakeModel.py" = "SkyModel.__main__:makemodel_main"
"MaskDicoModel.py" = "SkyModel.__main__:maskdicomodel_main"
"MyCasapy2bbs.py" = "SkyModel.__main__:mycasapy2bbs_main"

[project.optional-dependencies]
dft-support = ["montblanc >= 0.6.1, <= 0.7.3.1; python_version >= '3.8' and python_version < '3.11'"]
moresane-support = ["pymoresane >= 0.3.0; python_version >= '3.8' and python_version < '3.11'"]
fits-beam-support = ["meqtrees-cattery <= 1.7.9; python_version >= '3.8' and python_version < '3.11'"]
kms-support = ["bdsf > 1.8.15,<=1.10.1; python_version >= '3.8' and python_version < '3.11'"]
alternate-data-backends = ["dask-ms[xarray]<=0.2.20; python_version >= '3.8' and python_version < '3.11'",
                             "xarray<=2023.12.0; python_version >= '3.8' and python_version < '3.11'"]
testing-requirements = ["nose >= 1.3.7; python_version >= '3' and python_version < '3.9'",
                        "pynose >= 1.4.8; python_version >= '3.9' and python_version < '3.11'",
                        "owlcat >= 1.7.5; python_version >= '3.8' and python_version < '3.11'"]
                          
[tool.scikit-build]
# The versions of CMake to allow. If CMake is not present on the system or does
# not pass this specifier, it will be downloaded via PyPI if possible. An empty
# string will disable this check.
cmake.version = ">=2.8"

# A list of args to pass to CMake when configuring the project. Setting this in
# config or envvar will override toml. See also ``cmake.define``.
cmake.args = []

# A table of defines to pass to CMake when configuring the project. Additive.
cmake.define = {ENABLE_NATIVE_TUNING = "OFF", ENABLE_FAST_MATH = "ON", ENABLE_PYTHON_2 = "OFF", ENABLE_PYTHON_3 = "ON"}

# Verbose printout when building.
cmake.verbose = false

# The build type to use when building the project. Valid options are: "Debug",
# "Release", "RelWithDebInfo", "MinSizeRel", "", etc.
cmake.build-type = "RelWithDebInfo"

# The source directory to use when building the project. Currently only affects
# the native builder (not the setuptools plugin).
cmake.source-dir = "DDFacet"

# The build targets to use when building the project. Empty builds the default
# target.
cmake.targets = []

# The versions of Ninja to allow. If Ninja is not present on the system or does
# not pass this specifier, it will be downloaded via PyPI if possible. An empty
# string will disable this check.
ninja.version = ">=1.5"

# If CMake is not present on the system or is older required, it will be
# downloaded via PyPI if possible. An empty string will disable this check.
ninja.make-fallback = true

# The logging level to display, "DEBUG", "INFO", "WARNING", and "ERROR" are
# possible options.
logging.level = "WARNING"

# Files to include in the SDist even if they are skipped by default. Supports
# gitignore syntax.
sdist.include = [
    "DDFacet/Array/**/*.py",
    "DDFacet/Data/**/*.py",
    "DDFacet/Gridder/**/*.c",
    "DDFacet/Gridder/**/*.cc",
    "DDFacet/Gridder/**/*.hpp",
    "DDFacet/Gridder/**/*.h",
    "DDFacet/Gridder/**/*.pyx",
    "DDFacet/Imager/**/*.py",
    "DDFacet/Other/**/*.py",
    "DDFacet/Parset/**/*.cfg",
    "DDFacet/Parset/**/*.py",
    "DDFacet/Tests/**/*.py",
    "DDFacet/ToolsDir/**/*.py",
    "DDFacet/cmake/**/*.cmake",
    "DDFacet/CMakeLists.txt",
    "SkyModel/Array/**/*.py",
    "SkyModel/Other/**/*.py",
    "SkyModel/PSourceExtract *.py",
    "SkyModel/Sky/**/*.py",
    "SkyModel/Tools/**/*.py",
    "SkyModel/*.py",
    "DDFacet/*.py"
]

# Files to exclude from the SDist even if they are included by default. Supports
# gitignore syntax.
sdist.exclude = [
    "DDFacet/cbuild"
]

# If set to True, try to build a reproducible distribution (Unix and Python 3.9+
# recommended).  ``SOURCE_DATE_EPOCH`` will be used for timestamps, or a fixed
# value if not set.
sdist.reproducible = true

# If set to True, CMake will be run before building the SDist.
sdist.cmake = false

# A list of packages to auto-copy into the wheel. If this is not set, it will
# default to the first of ``src/<package>``, ``python/<package>``, or
# ``<package>`` if they exist.  The prefix(s) will be stripped from the package
# name inside the wheel.
wheel.packages = [
    "SkyModel", 
    "DDFacet"
]

# The Python tags. The default (empty string) will use the default Python
# version. You can also set this to "cp37" to enable the CPython 3.7+ Stable ABI
# / Limited API (only on CPython and if the version is sufficient, otherwise
# this has no effect). Or you can set it to "py3" or "py2.py3" to ignore Python
# ABI compatibility. The ABI tag is inferred from this tag.
wheel.py-api = ""

# Fill out extra tags that are not required. This adds "x86_64" and "arm64" to
# the list of platforms when "universal2" is used, which helps older Pip's
# (before 21.0.1) find the correct wheel.
wheel.expand-macos-universal-tags = false

# The install directory for the wheel. This is relative to the platlib root. You
# might set this to the package name. The original dir is still at
# SKBUILD_PLATLIB_DIR (also SKBUILD_DATA_DIR, etc. are available). EXPERIMENTAL:
# An absolute path will be one level higher than the platlib root, giving access
# to "/platlib", "/data", "/headers", and "/scripts".
wheel.install-dir = ""

# A list of license files to include in the wheel. Supports glob patterns.
wheel.license-files = ["LICENSE.md"]

# If set to True (the default), CMake will be run before building the wheel.
wheel.cmake = true

# Target the platlib or the purelib. If not set, the default is to target the
# platlib if wheel.cmake is true, and the purelib otherwise.
wheel.platlib = ""

# A set of patterns to exclude from the wheel. This is additive to the SDist
# exclude patterns. This applies to the source files, not the final paths.
# Editable installs may not respect this exclusion.
wheel.exclude = []

# The build tag to use for the wheel. If empty, no build tag is used.
wheel.build-tag = ""

# If CMake is less than this value, backport a copy of FindPython. Set to 0
# disable this, or the empty string.
backport.find-python = "3.26.1"

# Select the editable mode to use. Can be "redirect" (default) or "inplace".
editable.mode = "redirect"

# Turn on verbose output for the editable mode rebuilds.
editable.verbose = true

# Rebuild the project when the package is imported. The build-directory must be
# set.
editable.rebuild = false

# The components to install. If empty, all default components are installed.
install.components = []

# List dynamic metadata fields and hook locations in this table.
metadata = {}

# Strictly check all config options. If False, warnings will be printed for
# unknown options. If True, an error will be raised.
strict-config = true

# Enable early previews of features not finalized yet.
experimental = false

# If set, this will provide a method for backward compatibility.
minimum-version = "0.8"  # current version

# The build directory. Defaults to a temporary directory, but can be set.
build-dir = "DDFacet/cbuild"

# Whether to strip the binaries. True for scikit-build-core 0.5+
install.strip = false
